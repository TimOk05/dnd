// ===== –ú–û–ë–ò–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò =====

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
const isTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
document.addEventListener('DOMContentLoaded', function() {
    if (isMobile || isTouch) {
        initMobileFeatures();
    }
    
    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker –¥–ª—è PWA
    if ('serviceWorker' in navigator) {
        window.addEventListener('load', function() {
            navigator.serviceWorker.register('/dnd/sw.js')
                .then(function(registration) {
                    console.log('SW registered: ', registration);
                })
                .catch(function(registrationError) {
                    console.log('SW registration failed: ', registrationError);
                });
        });
    }
    
    // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if ('Notification' in window && Notification.permission === 'default') {
        Notification.requestPermission();
    }
});

function initMobileFeatures() {
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    document.body.classList.add('mobile-device');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∂–µ—Å—Ç—ã
    initSwipeGestures();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    initMobileNavigation();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    initMobileModals();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ —Ñ–æ—Ä–º—ã
    initMobileForms();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    initMobileButtons();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω—ã–π —á–∞—Ç
    initMobileChat();
}

// ===== –ñ–ï–°–¢–´ =====

function initSwipeGestures() {
    let startX, startY, endX, endY;
    const minSwipeDistance = 50;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Å–∞–Ω–∏–π
    document.addEventListener('touchstart', function(e) {
        startX = e.touches[0].clientX;
        startY = e.touches[0].clientY;
    });
    
    document.addEventListener('touchend', function(e) {
        endX = e.changedTouches[0].clientX;
        endY = e.changedTouches[0].clientY;
        
        const deltaX = endX - startX;
        const deltaY = endY - startY;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–∞–π–ø–∞
        if (Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > minSwipeDistance) {
            if (deltaX > 0) {
                // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ - –ø–æ–∫–∞–∑–∞—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
                handleSwipeRight();
            } else {
                // –°–≤–∞–π–ø –≤–ª–µ–≤–æ - —Å–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
                handleSwipeLeft();
            }
        } else if (Math.abs(deltaY) > Math.abs(deltaX) && Math.abs(deltaY) > minSwipeDistance) {
            if (deltaY > 0) {
                // –°–≤–∞–π–ø –≤–Ω–∏–∑ - –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                handleSwipeDown();
            } else {
                // –°–≤–∞–π–ø –≤–≤–µ—Ä—Ö - –ø–æ–∫–∞–∑–∞—Ç—å –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
                handleSwipeUp();
            }
        }
    });
}

function handleSwipeRight() {
    // –ü–æ–∫–∞–∑–∞—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å —Å –±—ã—Å—Ç—Ä—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    showQuickActions();
}

function handleSwipeLeft() {
    // –°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
    hideQuickActions();
}

function handleSwipeDown() {
    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    showRefreshIndicator();
}

function handleSwipeUp() {
    // –ü–æ–∫–∞–∑–∞—Ç—å –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    showQuickActions();
}

// ===== –ú–û–ë–ò–õ–¨–ù–ê–Ø –ù–ê–í–ò–ì–ê–¶–ò–Ø =====

function initMobileNavigation() {
    // –°–æ–∑–¥–∞–µ–º –º–æ–±–∏–ª—å–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å
    createMobileNav();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
    addMobileNavHandlers();
}

function createMobileNav() {
    const nav = document.createElement('div');
    nav.className = 'mobile-nav';
    nav.innerHTML = `
        <div class="mobile-nav-toggle">
            <span></span>
            <span></span>
            <span></span>
        </div>
        <div class="mobile-nav-menu">
            <a href="#" class="mobile-nav-item" data-action="dice">üé≤ –ö–æ—Å—Ç–∏</a>
            <a href="#" class="mobile-nav-item" data-action="npc">ü§ñ NPC</a>
            <a href="#" class="mobile-nav-item" data-action="initiative">‚öîÔ∏è –ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞</a>
            <a href="#" class="mobile-nav-item" data-action="notes">üìù –ó–∞–º–µ—Ç–∫–∏</a>
            <a href="#" class="mobile-nav-item" data-action="stats">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</a>
            <a href="#" class="mobile-nav-item" data-action="theme">üåô –¢–µ–º–∞</a>
        </div>
    `;
    
    document.body.appendChild(nav);
}

function addMobileNavHandlers() {
    const toggle = document.querySelector('.mobile-nav-toggle');
    const menu = document.querySelector('.mobile-nav-menu');
    const items = document.querySelectorAll('.mobile-nav-item');
    
    if (toggle) {
        toggle.addEventListener('click', function() {
            menu.classList.toggle('active');
            toggle.classList.toggle('active');
        });
    }
    
    items.forEach(item => {
        item.addEventListener('click', function(e) {
            e.preventDefault();
            const action = this.dataset.action;
            handleMobileNavAction(action);
            menu.classList.remove('active');
            toggle.classList.remove('active');
        });
    });
}

function handleMobileNavAction(action) {
    switch(action) {
        case 'dice':
            openDiceModal();
            break;
        case 'npc':
            openNpcModal();
            break;
        case 'initiative':
            openInitiativeModal();
            break;
        case 'notes':
            focusNotes();
            break;
        case 'stats':
            window.location.href = 'stats.php';
            break;
        case 'theme':
            toggleTheme();
            break;
    }
}

// ===== –ú–û–ë–ò–õ–¨–ù–´–ï –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê =====

function initMobileModals() {
    // –£–ª—É—á—à–∞–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
    const modals = document.querySelectorAll('.modal');
    
    modals.forEach(modal => {
        // –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–∫—Ä—ã—Ç–∏—è —Å–≤–∞–π–ø–æ–º
        let startY = 0;
        let currentY = 0;
        
        modal.addEventListener('touchstart', function(e) {
            startY = e.touches[0].clientY;
        });
        
        modal.addEventListener('touchmove', function(e) {
            currentY = e.touches[0].clientY;
            const deltaY = currentY - startY;
            
            if (deltaY > 0) {
                modal.style.transform = `translateY(${deltaY}px)`;
            }
        });
        
        modal.addEventListener('touchend', function(e) {
            const deltaY = currentY - startY;
            
            if (deltaY > 100) {
                // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                closeModal();
            } else {
                // –í–µ—Ä–Ω—É—Ç—å –Ω–∞ –º–µ—Å—Ç–æ
                modal.style.transform = '';
            }
        });
    });
}

// ===== –ú–û–ë–ò–õ–¨–ù–´–ï –§–û–†–ú–´ =====

function initMobileForms() {
    const inputs = document.querySelectorAll('input[type="text"], input[type="number"]');
    
    inputs.forEach(input => {
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ—Ñ–æ–∫—É—Å –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
        if (input.id === 'messageInput') {
            setTimeout(() => {
                input.focus();
            }, 500);
        }
        
        // –£–ª—É—á—à–∞–µ–º UX –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —Ñ–æ—Ä–º
        input.addEventListener('focus', function() {
            this.parentElement.classList.add('focused');
        });
        
        input.addEventListener('blur', function() {
            this.parentElement.classList.remove('focused');
        });
    });
}

// ===== –ú–û–ë–ò–õ–¨–ù–´–ï –ö–ù–û–ü–ö–ò =====

function initMobileButtons() {
    const buttons = document.querySelectorAll('.fast-btn, button[type="submit"], .modal .modal-save, .modal-regenerate');
    
    buttons.forEach(button => {
        // –î–æ–±–∞–≤–ª—è–µ–º haptic feedback –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
        button.addEventListener('click', function() {
            if (navigator.vibrate) {
                navigator.vibrate(50);
            }
        });
        
        // –£–ª—É—á—à–∞–µ–º touch targets
        button.style.minHeight = '44px';
        button.style.touchAction = 'manipulation';
    });
}

// ===== –ú–û–ë–ò–õ–¨–ù–´–ô –ß–ê–¢ =====

function initMobileChat() {
    const chatBox = document.querySelector('.chat-box');
    const messageInput = document.getElementById('messageInput');
    
    if (chatBox && messageInput) {
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏—è–º
        const observer = new MutationObserver(function() {
            chatBox.scrollTop = chatBox.scrollHeight;
        });
        
        observer.observe(chatBox, {
            childList: true,
            subtree: true
        });
        
        // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        messageInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                submitMessage();
            }
        });
    }
}

// ===== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò =====

function showQuickActions() {
    const quickActions = document.querySelector('.mobile-nav-menu');
    if (quickActions) {
        quickActions.classList.add('active');
    }
}

function hideQuickActions() {
    const quickActions = document.querySelector('.mobile-nav-menu');
    if (quickActions) {
        quickActions.classList.remove('active');
    }
}

function showRefreshIndicator() {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const indicator = document.createElement('div');
    indicator.className = 'refresh-indicator';
    indicator.textContent = '–ü–æ—Ç—è–Ω–∏—Ç–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è';
    document.body.appendChild(indicator);
    
    setTimeout(() => {
        indicator.remove();
    }, 2000);
}

function openDiceModal() {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –±—Ä–æ—Å–∫–∞ –∫–æ—Å—Ç–µ–π
    showModal('<b class="mini-menu-title">–ë—Ä–æ—Å–æ–∫ –∫–æ—Å—Ç–µ–π:</b><div class="dice-input-wrap"><input type=text id=dice-input value="1d20" placeholder="1d20" style="width:80px;text-align:center"></div><div class="dice-label-wrap"><input type=text id=dice-label placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)" style="width:200px"></div><button class="fast-btn" onclick="rollDice()">üé≤ –ë—Ä–æ—Å–∏—Ç—å</button>');
    setTimeout(() => document.getElementById('dice-input').focus(), 100);
}

function openNpcModal() {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ NPC
    showModal('<b class="mini-menu-title">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è NPC:</b><div class="npc-race-wrap"><select id=npc-race style="width:120px"><option value="—á–µ–ª–æ–≤–µ–∫">–ß–µ–ª–æ–≤–µ–∫</option><option value="—ç–ª—å—Ñ">–≠–ª—å—Ñ</option><option value="–≥–Ω–æ–º">–ì–Ω–æ–º</option><option value="–ø–æ–ª—É–æ—Ä–∫">–ü–æ–ª—É–æ—Ä–∫</option><option value="–ø–æ–ª—É—Ä–æ—Å–ª–∏–∫">–ü–æ–ª—É—Ä–æ—Å–ª–∏–∫</option><option value="—Ç–∏—Ñ–ª–∏–Ω–≥">–¢–∏—Ñ–ª–∏–Ω–≥</option><option value="–¥—Ä–∞–∫–æ–Ω–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π">–î—Ä–∞–∫–æ–Ω–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π</option><option value="–ø–æ–ª—É—ç–ª—å—Ñ">–ü–æ–ª—É—ç–ª—å—Ñ</option><option value="–¥–≤–æ—Ä—Ñ">–î–≤–æ—Ä—Ñ</option><option value="–≥–æ–±–ª–∏–Ω">–ì–æ–±–ª–∏–Ω</option><option value="–æ—Ä–∫">–û—Ä–∫</option><option value="–∫–æ–±–æ–ª—å–¥">–ö–æ–±–æ–ª—å–¥</option><option value="—è—â–µ—Ä–æ–ª—é–¥">–Ø—â–µ—Ä–æ–ª—é–¥</option><option value="—Ö–æ–±–±–∏—Ç">–•–æ–±–±–∏—Ç</option></select></div><div class="npc-class-wrap"><select id=npc-class style="width:120px"><option value="–≤–æ–∏–Ω">–í–æ–∏–Ω</option><option value="–º–∞–≥">–ú–∞–≥</option><option value="–∂—Ä–µ—Ü">–ñ—Ä–µ—Ü</option><option value="–ø–ª—É—Ç">–ü–ª—É—Ç</option><option value="–ø–∞–ª–∞–¥–∏–Ω">–ü–∞–ª–∞–¥–∏–Ω</option><option value="—Å–ª–µ–¥–æ–ø—ã—Ç">–°–ª–µ–¥–æ–ø—ã—Ç</option><option value="–≤–∞—Ä–≤–∞—Ä">–í–∞—Ä–≤–∞—Ä</option><option value="–±–∞—Ä–¥">–ë–∞—Ä–¥</option><option value="–¥—Ä—É–∏–¥">–î—Ä—É–∏–¥</option><option value="–º–æ–Ω–∞—Ö">–ú–æ–Ω–∞—Ö</option><option value="–∫–æ–ª–¥—É–Ω">–ö–æ–ª–¥—É–Ω</option><option value="—á–∞—Ä–æ–¥–µ–π">–ß–∞—Ä–æ–¥–µ–π</option><option value="–∏–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å">–ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å</option><option value="–∫—Ä–æ–≤–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫">–ö—Ä–æ–≤–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫</option><option value="–º–∏—Å—Ç–∏–∫">–ú–∏—Å—Ç–∏–∫</option><option value="–ø—Å–∏—Ö–æ–Ω–∏–∫">–ü—Å–∏—Ö–æ–Ω–∏–∫</option><option value="–∞—Ä—Ç–∏—Ñ–∏—Å–µ—Ä">–ê—Ä—Ç–∏—Ñ–∏—Å–µ—Ä</option></select></div><button class="fast-btn" onclick="generateNpc()">ü§ñ –°–æ–∑–¥–∞—Ç—å NPC</button>');
}

function openInitiativeModal() {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã
    showModal('<b class="mini-menu-title">–î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã:</b><div class="initiative-input-wrap"><input type=text id=initiative-name placeholder="–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞" style="width:150px"></div><div class="initiative-value-wrap"><input type=number id=initiative-value placeholder="–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞" style="width:80px;text-align:center"></div><button class="fast-btn" onclick="addInitiative()">‚öîÔ∏è –î–æ–±–∞–≤–∏—Ç—å</button>');
    setTimeout(() => document.getElementById('initiative-name').focus(), 100);
}

function focusNotes() {
    // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –∑–∞–º–µ—Ç–∫–∞—Ö
    const notesBlock = document.querySelector('.notes-block');
    if (notesBlock) {
        notesBlock.scrollIntoView({ behavior: 'smooth' });
        notesBlock.style.animation = 'pulse 0.5s ease-in-out';
        setTimeout(() => {
            notesBlock.style.animation = '';
        }, 500);
    }
}

function submitMessage() {
    const form = document.getElementById('chatForm');
    if (form) {
        form.submit();
    }
}

// ===== CSS –ê–ù–ò–ú–ê–¶–ò–ò =====

const mobileStyles = `
<style>
/* –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */
.mobile-nav {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 60px;
    background: var(--bg-primary);
    border-bottom: 2px solid var(--border-primary);
    z-index: 1001;
    display: none;
}

.mobile-device .mobile-nav {
    display: block;
}

.mobile-nav-toggle {
    position: absolute;
    top: 15px;
    left: 15px;
    width: 30px;
    height: 30px;
    cursor: pointer;
    z-index: 1002;
}

.mobile-nav-toggle span {
    display: block;
    width: 100%;
    height: 3px;
    background: var(--text-primary);
    margin: 6px 0;
    transition: 0.3s;
}

.mobile-nav-toggle.active span:nth-child(1) {
    transform: rotate(-45deg) translate(-9px, 6px);
}

.mobile-nav-toggle.active span:nth-child(2) {
    opacity: 0;
}

.mobile-nav-toggle.active span:nth-child(3) {
    transform: rotate(45deg) translate(-8px, -8px);
}

.mobile-nav-menu {
    position: fixed;
    top: 60px;
    left: -100%;
    width: 250px;
    height: calc(100vh - 60px);
    background: var(--bg-secondary);
    border-right: 2px solid var(--border-primary);
    transition: 0.3s;
    z-index: 1000;
    padding: 20px;
}

.mobile-nav-menu.active {
    left: 0;
}

.mobile-nav-item {
    display: block;
    padding: 15px;
    margin: 5px 0;
    background: var(--bg-tertiary);
    border: 1px solid var(--border-primary);
    border-radius: 8px;
    text-decoration: none;
    color: var(--text-primary);
    font-size: 1.1em;
    transition: 0.3s;
}

.mobile-nav-item:hover {
    background: var(--bg-quaternary);
    transform: translateX(5px);
}

/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */
.refresh-indicator {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    background: var(--accent-info);
    color: white;
    padding: 10px 20px;
    border-radius: 20px;
    z-index: 1000;
    animation: slideDown 0.3s ease-out;
}

@keyframes slideDown {
    from {
        transform: translateX(-50%) translateY(-100%);
        opacity: 0;
    }
    to {
        transform: translateX(-50%) translateY(0);
        opacity: 1;
    }
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

/* –ú–æ–±–∏–ª—å–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */
.mobile-device .parchment {
    margin-top: 70px;
}

.mobile-device .theme-toggle {
    top: 70px;
}

.mobile-device .admin-link {
    top: 70px;
}

/* –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è touch-—É—Å—Ç—Ä–æ–π—Å—Ç–≤ */
.mobile-device .fast-btn:active,
.mobile-device button[type=submit]:active,
.mobile-device .modal .modal-save:active,
.mobile-device .modal-regenerate:active {
    transform: scale(0.95);
    transition: transform 0.1s;
}

/* –§–æ–∫—É—Å –Ω–∞ —Ñ–æ—Ä–º–∞—Ö */
.mobile-device form.focused {
    border: 2px solid var(--accent-primary);
    border-radius: 8px;
    padding: 5px;
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */
.mobile-device .modal {
    transition: transform 0.3s ease;
}

.mobile-device .modal.closing {
    transform: translateY(100%);
}
</style>
`;

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ head
document.head.insertAdjacentHTML('beforeend', mobileStyles);
