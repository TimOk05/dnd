// ===== –ü–†–û–°–¢–û–ô –ú–û–ë–ò–õ–¨–ù–´–ô –ò–ù–¢–ï–†–§–ï–ô–° =====

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
const isTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
document.addEventListener('DOMContentLoaded', function() {
    if (isMobile || isTouch) {
        initSimpleMobile();
    }
});

function initSimpleMobile() {
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    document.body.classList.add('mobile-device');

    // –ü—Ä–æ—Å—Ç–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∞–π–∞—É—Ç–∞
    fixSimpleLayout();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ
    initSmoothScrolling();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ —Ñ–æ—Ä–º—ã
    initMobileForms();
}

// ===== –ü–†–û–°–¢–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –õ–ê–ô–ê–£–¢–ê =====

function fixSimpleLayout() {
    // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã - –ø—Ä–æ—Å—Ç–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    const themeToggle = document.querySelector('.theme-toggle');
    if (themeToggle) {
        themeToggle.style.position = 'fixed';
        themeToggle.style.top = '20px';
        themeToggle.style.right = '20px';
        themeToggle.style.zIndex = '1000';
    }

    // –ê–¥–º–∏–Ω-—Å—Å—ã–ª–∫–∞ - —Ä—è–¥–æ–º —Å –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–º —Ç–µ–º—ã
    const adminLink = document.querySelector('.admin-link');
    if (adminLink) {
        adminLink.style.position = 'fixed';
        adminLink.style.top = '20px';
        adminLink.style.right = '80px';
        adminLink.style.zIndex = '1000';
    }

    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - –≤–≤–µ—Ä—Ö—É
    const userInfo = document.querySelector('.user-info');
    if (userInfo) {
        userInfo.style.position = 'fixed';
        userInfo.style.top = '20px';
        userInfo.style.left = '20px';
        userInfo.style.right = '160px';
        userInfo.style.zIndex = '1000';
        userInfo.style.background = 'rgba(255, 255, 255, 0.9)';
        userInfo.style.padding = '10px';
        userInfo.style.borderRadius = '8px';
    }

    // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç - –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É
    const parchment = document.querySelector('.parchment');
    if (parchment) {
        parchment.style.marginTop = '80px';
        parchment.style.paddingTop = '20px';
    }
}

// ===== –ü–õ–ê–í–ù–û–ï –ü–†–û–õ–ò–°–¢–´–í–ê–ù–ò–ï =====

function initSmoothScrolling() {
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞–≤–Ω–æ–µ –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
    const links = document.querySelectorAll('a[href^="#"]');
    links.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });

    // –ü–ª–∞–≤–Ω–æ–µ –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const navButtons = document.querySelectorAll('.fast-btn');
    navButtons.forEach(button => {
        button.addEventListener('click', function() {
            // –ü–ª–∞–≤–Ω–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏—è
            setTimeout(() => {
                const resultElement = document.querySelector('.chat-box') ||
                    document.querySelector('.notes-block') ||
                    document.querySelector('.modal');
                if (resultElement) {
                    resultElement.scrollIntoView({
                        behavior: 'smooth',
                        block: 'nearest'
                    });
                }
            }, 500);
        });
    });
}

// ===== –ú–û–ë–ò–õ–¨–ù–´–ï –§–û–†–ú–´ =====

function initMobileForms() {
    // –£–ª—É—á—à–∞–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞
    const inputs = document.querySelectorAll('input[type="text"], input[type="number"], select');
    inputs.forEach(input => {
        input.style.fontSize = '16px'; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∑—É–º –Ω–∞ iOS
        input.style.padding = '12px';
        input.style.minHeight = '44px';
        input.style.borderRadius = '8px';
        input.style.border = '2px solid var(--border-primary)';
    });

    // –£–ª—É—á—à–∞–µ–º –∫–Ω–æ–ø–∫–∏
    const buttons = document.querySelectorAll('.fast-btn, button[type="submit"]');
    buttons.forEach(button => {
        button.style.minHeight = '44px';
        button.style.padding = '12px 20px';
        button.style.fontSize = '16px';
        button.style.borderRadius = '8px';
    });
}

// ===== –ü–†–û–°–¢–´–ï –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê =====

function openSimpleDiceModal() {
    const content = `
        <div style="text-align: center; padding: 20px;">
            <h3 style="margin-bottom: 20px;">üé≤ –ë—Ä–æ—Å–æ–∫ –∫–æ—Å—Ç–µ–π</h3>
            <div style="margin-bottom: 15px;">
                <input type="text" id="dice-input" value="1d20" 
                       style="width: 100px; text-align: center; font-size: 18px; padding: 10px;">
            </div>
            <div style="margin-bottom: 20px;">
                <input type="text" id="dice-label" placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" 
                       style="width: 200px; padding: 10px;">
            </div>
            <button class="fast-btn" onclick="rollDice()" 
                    style="width: 100%; padding: 15px; font-size: 18px;">
                üé≤ –ë—Ä–æ—Å–∏—Ç—å
            </button>
        </div>
    `;
    showModal(content);
    setTimeout(() => document.getElementById('dice-input').focus(), 100);
}

function openSimpleNpcModal() {
    const content = `
        <div style="padding: 20px;">
            <h3 style="text-align: center; margin-bottom: 20px;">ü§ñ –°–æ–∑–¥–∞—Ç—å NPC</h3>
            
            <div style="margin-bottom: 15px;">
                <label style="display: block; margin-bottom: 5px; font-weight: bold;">–†–∞—Å–∞:</label>
                <select id="npc-race" style="width: 100%; padding: 12px; font-size: 16px;">
                    <option value="—á–µ–ª–æ–≤–µ–∫">–ß–µ–ª–æ–≤–µ–∫</option>
                    <option value="—ç–ª—å—Ñ">–≠–ª—å—Ñ</option>
                    <option value="–≥–Ω–æ–º">–ì–Ω–æ–º</option>
                    <option value="–ø–æ–ª—É–æ—Ä–∫">–ü–æ–ª—É–æ—Ä–∫</option>
                    <option value="–ø–æ–ª—É—Ä–æ—Å–ª–∏–∫">–ü–æ–ª—É—Ä–æ—Å–ª–∏–∫</option>
                    <option value="—Ç–∏—Ñ–ª–∏–Ω–≥">–¢–∏—Ñ–ª–∏–Ω–≥</option>
                    <option value="–¥—Ä–∞–∫–æ–Ω–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π">–î—Ä–∞–∫–æ–Ω–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã–π</option>
                    <option value="–ø–æ–ª—É—ç–ª—å—Ñ">–ü–æ–ª—É—ç–ª—å—Ñ</option>
                    <option value="–¥–≤–æ—Ä—Ñ">–î–≤–æ—Ä—Ñ</option>
                    <option value="–≥–æ–±–ª–∏–Ω">–ì–æ–±–ª–∏–Ω</option>
                    <option value="–æ—Ä–∫">–û—Ä–∫</option>
                    <option value="–∫–æ–±–æ–ª—å–¥">–ö–æ–±–æ–ª—å–¥</option>
                    <option value="—è—â–µ—Ä–æ–ª—é–¥">–Ø—â–µ—Ä–æ–ª—é–¥</option>
                    <option value="—Ö–æ–±–±–∏—Ç">–•–æ–±–±–∏—Ç</option>
                </select>
            </div>
            
            <div style="margin-bottom: 15px;">
                <label style="display: block; margin-bottom: 5px; font-weight: bold;">–ö–ª–∞—Å—Å:</label>
                <select id="npc-class" style="width: 100%; padding: 12px; font-size: 16px;">
                    <option value="–≤–æ–∏–Ω">–í–æ–∏–Ω</option>
                    <option value="–º–∞–≥">–ú–∞–≥</option>
                    <option value="–∂—Ä–µ—Ü">–ñ—Ä–µ—Ü</option>
                    <option value="–ø–ª—É—Ç">–ü–ª—É—Ç</option>
                    <option value="–ø–∞–ª–∞–¥–∏–Ω">–ü–∞–ª–∞–¥–∏–Ω</option>
                    <option value="—Å–ª–µ–¥–æ–ø—ã—Ç">–°–ª–µ–¥–æ–ø—ã—Ç</option>
                    <option value="–≤–∞—Ä–≤–∞—Ä">–í–∞—Ä–≤–∞—Ä</option>
                    <option value="–±–∞—Ä–¥">–ë–∞—Ä–¥</option>
                    <option value="–¥—Ä—É–∏–¥">–î—Ä—É–∏–¥</option>
                    <option value="–º–æ–Ω–∞—Ö">–ú–æ–Ω–∞—Ö</option>
                    <option value="–∫–æ–ª–¥—É–Ω">–ö–æ–ª–¥—É–Ω</option>
                    <option value="—á–∞—Ä–æ–¥–µ–π">–ß–∞—Ä–æ–¥–µ–π</option>
                    <option value="–∏–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å">–ò–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å</option>
                    <option value="–∫—Ä–æ–≤–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫">–ö—Ä–æ–≤–Ω—ã–π –æ—Ö–æ—Ç–Ω–∏–∫</option>
                    <option value="–º–∏—Å—Ç–∏–∫">–ú–∏—Å—Ç–∏–∫</option>
                    <option value="–ø—Å–∏—Ö–æ–Ω–∏–∫">–ü—Å–∏—Ö–æ–Ω–∏–∫</option>
                    <option value="–∞—Ä—Ç–∏—Ñ–∏—Å–µ—Ä">–ê—Ä—Ç–∏—Ñ–∏—Å–µ—Ä</option>
                </select>
            </div>
            
            <div style="margin-bottom: 20px;">
                <label style="display: block; margin-bottom: 5px; font-weight: bold;">–£—Ä–æ–≤–µ–Ω—å:</label>
                <input type="number" id="npc-level" value="1" min="1" max="20" 
                       style="width: 100%; padding: 12px; font-size: 16px;">
            </div>
            
            <button class="fast-btn" onclick="generateSimpleNpc()" 
                    style="width: 100%; padding: 15px; font-size: 18px;">
                ü§ñ –°–æ–∑–¥–∞—Ç—å NPC
            </button>
        </div>
    `;
    showModal(content);
}

function openSimpleInitiativeModal() {
    const content = `
        <div style="text-align: center; padding: 20px;">
            <h3 style="margin-bottom: 20px;">‚öîÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É</h3>
            <div style="margin-bottom: 15px;">
                <input type="text" id="initiative-name" placeholder="–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞" 
                       style="width: 200px; padding: 10px; font-size: 16px;">
            </div>
            <div style="margin-bottom: 20px;">
                <input type="number" id="initiative-value" placeholder="–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞" 
                       style="width: 100px; padding: 10px; font-size: 16px;">
            </div>
            <button class="fast-btn" onclick="addInitiative()" 
                    style="width: 100%; padding: 15px; font-size: 18px;">
                ‚öîÔ∏è –î–æ–±–∞–≤–∏—Ç—å
            </button>
        </div>
    `;
    showModal(content);
    setTimeout(() => document.getElementById('initiative-name').focus(), 100);
}

// ===== –ü–†–û–°–¢–´–ï –§–£–ù–ö–¶–ò–ò =====

function generateSimpleNpc() {
    const race = document.getElementById('npc-race').value;
    const npcClass = document.getElementById('npc-class').value;
    const level = document.getElementById('npc-level').value;

    if (!race || !npcClass || !level) {
        alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
        return;
    }

    closeModal();
    setTimeout(() => {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        window.npcRace = race;
        window.npcClass = npcClass;
        window.npcLevel = parseInt(level);
        generateNpcWithLevel();
    }, 300);
}

// ===== –ü–†–û–°–¢–´–ï CSS –°–¢–ò–õ–ò =====

const simpleMobileStyles = `
<style>
/* –ü—Ä–æ—Å—Ç—ã–µ –º–æ–±–∏–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ */
.mobile-device .parchment {
    margin: 80px 10px 20px 10px;
    padding: 15px;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */
.mobile-device .fast-btn {
    margin: 5px 0;
    padding: 15px 20px;
    font-size: 16px;
    border-radius: 10px;
    border: none;
    background: linear-gradient(135deg, #8B4513, #A0522D);
    color: white;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
}

.mobile-device .fast-btn:active {
    transform: scale(0.98);
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–æ–ª—è –≤–≤–æ–¥–∞ */
.mobile-device input[type="text"],
.mobile-device input[type="number"],
.mobile-device select {
    width: 100%;
    padding: 12px;
    font-size: 16px;
    border: 2px solid #ddd;
    border-radius: 8px;
    background: white;
    margin: 5px 0;
}

.mobile-device input:focus,
.mobile-device select:focus {
    outline: none;
    border-color: #8B4513;
    box-shadow: 0 0 5px rgba(139, 69, 19, 0.3);
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–π —á–∞—Ç */
.mobile-device .chat-box {
    max-height: 60vh;
    overflow-y: auto;
    padding: 15px;
    background: rgba(255, 255, 255, 0.9);
    border-radius: 10px;
    border: 1px solid #ddd;
    margin: 10px 0;
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ */
.mobile-device .notes-block {
    margin-top: 20px;
    padding: 15px;
    background: rgba(255, 255, 255, 0.9);
    border-radius: 10px;
    border: 1px solid #ddd;
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ */
.mobile-device .modal {
    width: 95vw;
    max-width: 400px;
    height: auto;
    max-height: 90vh;
    margin: 5vh auto;
    border-radius: 15px;
    overflow-y: auto;
    background: white;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);
}

.mobile-device .modal-content {
    padding: 20px;
}

/* –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ —á–∞—Ç–∞ */
.mobile-device form {
    display: flex;
    gap: 10px;
    margin: 15px 0;
    align-items: center;
}

.mobile-device form input[type="text"] {
    flex: 1;
    margin: 0;
}

.mobile-device form button {
    padding: 12px 20px;
    font-size: 16px;
    border-radius: 8px;
    border: none;
    background: #8B4513;
    color: white;
    white-space: nowrap;
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ */
.mobile-device .reset-link {
    color: #8B4513;
    text-decoration: none;
    font-size: 14px;
    margin-left: 10px;
}

.mobile-device .reset-link:hover {
    text-decoration: underline;
}

/* –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ */
.mobile-device * {
    scroll-behavior: smooth;
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ */
.mobile-device h1 {
    text-align: center;
    margin: 20px 0;
    color: #8B4513;
    font-size: 24px;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
}

/* –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ */
.mobile-device .fast-bar {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 10px;
    margin: 15px 0;
}

/* –£–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ */
.mobile-device .hotkeys-hint {
    text-align: center;
    margin: 10px 0;
    font-size: 12px;
    color: #666;
    opacity: 0.8;
}

/* –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */
.mobile-device[data-theme="dark"] .parchment {
    background: #2a2a2a;
    color: #fff;
}

.mobile-device[data-theme="dark"] input,
.mobile-device[data-theme="dark"] select {
    background: #3a3a3a;
    color: #fff;
    border-color: #555;
}

.mobile-device[data-theme="dark"] .chat-box,
.mobile-device[data-theme="dark"] .notes-block {
    background: rgba(58, 58, 58, 0.9);
    border-color: #555;
}

/* –ê–Ω–∏–º–∞—Ü–∏–∏ */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

.mobile-device .parchment {
    animation: fadeIn 0.5s ease-out;
}

/* –£–ª—É—á—à–µ–Ω–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å */
.mobile-device button:focus,
.mobile-device input:focus,
.mobile-device select:focus {
    outline: 2px solid #8B4513;
    outline-offset: 2px;
}
</style>
`;

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ head
document.head.insertAdjacentHTML('beforeend', simpleMobileStyles);